#!/usr/bin/env bash
# v1.0.1

set -e
set -u
set -o pipefail

decrypt_file() {
    local -r file_name="$1"
    local -r pass_env="IMAGE_BUILD_PASSWORD"

    openssl enc -d -aes-256-cbc -a -salt -pass "env:${pass_env}" -in "${file_name}" -out "${file_name%%.enc}"
}

download_raspbian_jessie_lite() {
    local destination_image_name="$1"
    local -r base_image_version="2017-04-10"

    [[ -f "$destination_image_name" ]] && return 0

    wget --no-clobber --quiet --show-progress \
        "https://downloads.raspberrypi.org/raspbian_lite/images/raspbian_lite-$base_image_version/$base_image_version-raspbian-jessie-lite.zip"
    checksum=$(openssl dgst -SHA1 "$base_image_version-raspbian-jessie-lite.zip" | awk '{ print $2 }')
    if [[ $checksum != 'c24a4c7dd1a5957f303193fee712d0d2c0c6372d' ]]
    then
        printf '%s\n' 'Bad checksum for download' >&2
        return 1
    fi

    unzip "$base_image_version-raspbian-jessie-lite.zip"
    mv "$base_image_version-raspbian-jessie-lite.img" "$destination_image_name"
}

execute_in_partition_context() {
    local image_name="$1"
    local partition_offset="$2"
    local partition_format="$3"
    shift 3
    local rootfs
    rootfs=$(basename "$(mktemp --dry-run)")

    mkdir -p "$rootfs"
    mount -v -o offset="$partition_offset" -t "$partition_format" "$image_name" "$rootfs"
    pushd "$rootfs"
        "$@"
    popd
    umount "$rootfs" && rmdir "$rootfs"
}

execute_in_container() {
    local preload="ld.so.preload"

    cp ./etc/$preload ../$preload
    truncate -s0 ./etc/$preload
    systemd-nspawn --directory "$PWD" "$@"
    mv ../$preload ./etc/$preload
}

update_linux() {
    local -r hostname=${IMAGE_HOSTNAME:-raspberrypi}
    cp /usr/bin/qemu-arm-static ./usr/bin

    execute_in_container apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 0x219BD9C9
    execute_in_container sh -c "printf '%s\n' 'deb http://repos.azulsystems.com/debian stable main' > /etc/apt/sources.list.d/zulu.list"
    execute_in_container apt-get -y update
    execute_in_container apt-get -y purge 'build-essential' 'gdb' 'libraspberrypi-doc' 'man-db' 'pi-bluetooth' 'wget'
    execute_in_container apt-get -y clean
    execute_in_container apt-get -y autoremove
    execute_in_container apt-get -y install zulu-embedded-8

    export -f decrypt_file
    find "$dir"/files -type f -name '*.enc' -exec bash -x -c 'decrypt_file "$0"' {} \;
    cp -r "$dir"/files/* .
    execute_in_container systemctl enable ssh
    execute_in_container systemctl enable gpio-reboot
    execute_in_container systemctl enable gpio-poweroff

    printf '%s\n' "$hostname" > etc/hostname
    {
        printf '%s\n' "127.0.0.1 localhost"
        printf '%s\n' "127.0.1.1 $hostname"
    } > etc/hosts
}

update_bootp() {
    truncate -s0 config.txt
    {
        printf '%s\n' 'dtparam=spi=on'
        printf '%s\n' 'dtoverlay=gpio-poweroff,gpiopin=4'
    } >> config.txt
}

build_custom_image() {
    local -r dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    local -r hostname=${IMAGE_HOSTNAME:-raspberrypi}

    download_raspbian_jessie_lite "raspbian-$hostname.img"
    linux_offset=$(fdisk -l "raspbian-$hostname.img" | awk -f "$dir"/fdisk-offsets.awk | awk '/Linux/ { print $2 }')
    bootp_offset=$(fdisk -l "raspbian-$hostname.img" | awk -f "$dir"/fdisk-offsets.awk | awk '/FAT32/ { print $2 }')
    execute_in_partition_context "raspbian-$hostname.img" "$linux_offset" 'ext4' update_linux
    execute_in_partition_context "raspbian-$hostname.img" "$bootp_offset" 'vfat' update_bootp
}

build_custom_image
